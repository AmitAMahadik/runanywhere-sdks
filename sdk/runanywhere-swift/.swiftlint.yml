# SwiftLint configuration for RunAnywhere SDK

# Rule configuration
opt_in_rules:
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - empty_collection_literal
  - empty_count
  - empty_string
  - first_where
  - force_unwrapping
  - implicit_return
  - last_where
  - legacy_multiple
  - multiline_arguments
  - multiline_function_chains
  - multiline_parameters
  - operator_usage_whitespace
  - overridden_super_call
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - redundant_nil_coalescing
  - redundant_type_annotation
  - strict_fileprivate
  - toggle_bool
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition
  # Strongly typed rules
  - explicit_type_interface
  - discouraged_object_literal
  - discouraged_optional_collection
  - typesafe_array_init
  - array_init

disabled_rules:
  - todo
  - fixme

# Directories to include
included:
  - Sources
  - Tests

# Directories to exclude
excluded:
  - .build
  - DerivedData
  - Package.swift

# Configure individual rules
line_length:
  warning: 120
  error: 150
  ignores_urls: true
  ignores_function_declarations: true
  ignores_comments: true

file_length:
  warning: 500
  error: 1000

function_body_length:
  warning: 40
  error: 100

function_parameter_count:
  warning: 5
  error: 8

type_body_length:
  warning: 300
  error: 500

cyclomatic_complexity:
  warning: 10
  error: 20

identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 40
    error: 50
  excluded:
    - id
    - i
    - j
    - k
    - x
    - y
    - z

type_name:
  min_length: 3
  max_length:
    warning: 40
    error: 50

# Custom configurations
force_cast: error
force_try: error
trailing_whitespace:
  ignores_empty_lines: true
vertical_whitespace:
  max_empty_lines: 2

# Strongly typed configuration
explicit_type_interface:
  excluded:
    - local
  allow_redundancy: false
  
# Custom rules for strong typing
custom_rules:
  avoid_any_type:
    name: "Avoid Any Type"
    regex: ':\s*Any\b'
    message: "Avoid using 'Any' type. Use specific types or protocols instead."
    severity: warning
    
  avoid_any_object:
    name: "Avoid AnyObject Type"
    regex: ':\s*AnyObject\b'
    message: "Avoid using 'AnyObject' type. Use specific types or protocols instead."
    severity: warning
    
  prefer_concrete_types:
    name: "Prefer Concrete Types"
    regex: ':\s*\[String:\s*Any\]'
    message: "Avoid dictionaries with 'Any' values. Define a struct or use specific types."
    severity: warning
    
  avoid_force_cast:
    name: "Avoid Force Cast"
    regex: ' as! '
    message: "Force casting can crash. Use conditional casting (as?) instead."
    severity: error
    
  avoid_implicitly_unwrapped_optionals:
    name: "Avoid Implicitly Unwrapped Optionals"
    regex: ':\s*\w+!'
    message: "Avoid implicitly unwrapped optionals. Use regular optionals or non-optional types."
    severity: warning